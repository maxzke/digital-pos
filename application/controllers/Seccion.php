<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Seccion extends MY_Controller{
    function __construct()
    {
        parent::__construct();
        $this->require_min_level(1);
        if( !$this->is_role('admin') ){
            redirect('restringido');
        }
        $this->load->model('Seccion_model');
    } 

    /*
     * Listing of seccion
     */
    function index()
    {
        $data['seccion'] = $this->Seccion_model->get_all_seccion();
        
        $data['_view'] = 'seccion/index';
        $data['alertas'] = $this->check_min_stock();
        $this->load->view('layouts/admin',$data);
    }

    /**
     * CHECA MINIMO STOCK
     */
    public function check_min_stock(){
        $this->load->model('Producto_model');
        $data['alerta_stock'] = $this->Producto_model->get_minimo_stock_productos();
        $abastecer = array();
        $cant = 0;
        foreach ($data['alerta_stock'] as $key) {
            if ($key['abastecer'] == "true") {
                $cant++;
                array_push($abastecer,$key);                
            }               
        }
        $response = array(
            'items' => $abastecer ,
            'cantidad' => $cant 
        );
        return $response;        
        //echo json_encode($response);
    }

    /*
     * Adding a new seccion
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('nombre','Nombre','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'nombre' => $this->input->post('nombre'),
            );
            
            $seccion_id = $this->Seccion_model->add_seccion($params);
            redirect('seccion/index');
        }
        else
        {            
            $data['_view'] = 'seccion/add';
            $data['alertas'] = $this->check_min_stock();
            $this->load->view('layouts/admin',$data);
        }
    }  

    /*
     * Editing a seccion
     */
    function edit($id)
    {   
        // check if the seccion exists before trying to edit it
        $data['seccion'] = $this->Seccion_model->get_seccion($id);
        
        if(isset($data['seccion']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('nombre','Nombre','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'nombre' => $this->input->post('nombre'),
                );

                $this->Seccion_model->update_seccion($id,$params);            
                redirect('seccion/index');
            }
            else
            {
                $data['_view'] = 'seccion/edit';
                $data['alertas'] = $this->check_min_stock();
                $this->load->view('layouts/admin',$data);
            }
        }
        else
            show_error('The seccion you are trying to edit does not exist.');
    } 

    /*
     * Deleting seccion
     */
    function remove($id)
    {
        $seccion = $this->Seccion_model->get_seccion($id);

        // check if the seccion exists before trying to delete it
        if(isset($seccion['id']))
        {
            $this->Seccion_model->delete_seccion($id);
            redirect('seccion/index');
        }
        else
            show_error('The seccion you are trying to delete does not exist.');
    }
    
}
