<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Mesa extends MY_Controller{
    function __construct()
    {
        parent::__construct();      
        $this->require_min_level(1);
        if( !$this->is_role('admin') ){
            redirect('restringido');
        }
        $this->load->model('Mesa_model');
    } 

    /*
     * Listing of mesas
     */
    function index()
    {
        
        $data['mesas'] = $this->Mesa_model->get_all_mesas();
        $this->load->model('Seccion_model');
        $data['all_seccion'] = $this->Seccion_model->get_all_seccion();
        $data['alertas'] = $this->check_min_stock();
        $data['_view'] = 'mesa/index';
        $this->load->view('layouts/admin',$data);
        
    }

    /**
     * RENOMBRA alias MESA
     */
    public function renombrar(){
        $this->load->library('form_validation');
        $this->form_validation->set_rules('nombre','Nombre','required');
        $id = $this->input->post('idmesa');
        if($this->form_validation->run()){
            $params = array(
				'alias' => $this->input->post('nombre'),
            );
            $this->Mesa_model->rename_mesa($params,$id);
            $url = base_url('carrito/order/'.$id);
            redirect('carrito/order/'.$id);
        }else{
            redirect('carrito/order/'.$id);
        }        
    }
    

    /*
     * Adding a new mesa
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('seccion','Seccion','required');
		$this->form_validation->set_rules('nombre','Nombre','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'seccion' => $this->input->post('seccion'),
				'cuadrara' => $this->input->post('cuadrara'),
				'nombre' => $this->input->post('nombre'),
				// 'arriba' => $this->input->post('arriba'),
				// 'izquierda' => $this->input->post('izquierda'),
				// 'alto' => $this->input->post('alto'),
				// 'ancho' => $this->input->post('ancho'),
            );
            
            $mesa_id = $this->Mesa_model->add_mesa($params);
            redirect('mesa/index');
        }
        else
        {
			$this->load->model('Seccion_model');
			$data['all_seccion'] = $this->Seccion_model->get_all_seccion();
            $data['alertas'] = $this->check_min_stock();
            $data['_view'] = 'mesa/add';
            $this->load->view('layouts/admin',$data);
        }
    }  

    /*
     * Editing a mesa
     */
    function edit($id)
    {   
        // check if the mesa exists before trying to edit it
        $data['mesa'] = $this->Mesa_model->get_mesa($id);
        
        if(isset($data['mesa']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('seccion','Seccion','required');
			$this->form_validation->set_rules('nombre','Nombre','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'seccion' => $this->input->post('seccion'),
					'cuadrara' => $this->input->post('cuadrara'),
					'nombre' => $this->input->post('nombre'),
					'arriba' => $this->input->post('arriba'),
					'izquierda' => $this->input->post('izquierda'),
					'alto' => $this->input->post('alto'),
					'ancho' => $this->input->post('ancho'),
                );

                $this->Mesa_model->update_mesa($id,$params);            
                redirect('mesa/index');
            }
            else
            {
				$this->load->model('Seccion_model');
				$data['all_seccion'] = $this->Seccion_model->get_all_seccion();
                $data['alertas'] = $this->check_min_stock();
                $data['_view'] = 'mesa/edit';
                $this->load->view('layouts/admin',$data);
            }
        }
        else
            show_error('The mesa you are trying to edit does not exist.');
    } 

    /*
     * Deleting mesa
     */
    function remove($id)
    {
        $mesa = $this->Mesa_model->get_mesa($id);

        // check if the mesa exists before trying to delete it
        if(isset($mesa['id']))
        {
            $this->Mesa_model->delete_mesa($id);
            redirect('mesa/index');
        }
        else
            show_error('The mesa you are trying to delete does not exist.');
    }

    /**
     * CHECA MINIMO STOCK
     */
    public function check_min_stock(){
        $this->load->model('Producto_model');
        $data['alerta_stock'] = $this->Producto_model->get_minimo_stock_productos();
        $abastecer = array();
        $cant = 0;
        foreach ($data['alerta_stock'] as $key) {
            if ($key['abastecer'] == "true") {
                $cant++;
                array_push($abastecer,$key);                
            }               
        }
        $response = array(
            'items' => $abastecer ,
            'cantidad' => $cant 
        );
        return $response;        
        //echo json_encode($response);
    }

    
    
}
